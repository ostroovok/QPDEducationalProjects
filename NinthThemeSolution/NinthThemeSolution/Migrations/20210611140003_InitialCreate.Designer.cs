// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NinthThemeSolution.Data;

namespace NinthThemeSolution.Migrations
{
    [DbContext(typeof(BotRepositoryContext))]
    [Migration("20210611140003_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NinthThemeSolution.Models.Anecdote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnecdoteRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnecdoteRequestId");

                    b.ToTable("Anecdotes");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.AnecdoteRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnecdotesRequests");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.Aphorism", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aphorisms");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.ByePhrase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ByePhraseRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ByePhraseRequestId");

                    b.ToTable("ByePhrases");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.ByePhraseRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ByePhrasesRequests");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.HelloPhrase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HelloPhraseRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HelloPhraseRequestId");

                    b.ToTable("HelloPhrases");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.HelloPhraseRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HelloPhrasesRequests");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.Anecdote", b =>
                {
                    b.HasOne("NinthThemeSolution.Models.AnecdoteRequest", null)
                        .WithMany("Responses")
                        .HasForeignKey("AnecdoteRequestId");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.ByePhrase", b =>
                {
                    b.HasOne("NinthThemeSolution.Models.ByePhraseRequest", null)
                        .WithMany("Responses")
                        .HasForeignKey("ByePhraseRequestId");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.HelloPhrase", b =>
                {
                    b.HasOne("NinthThemeSolution.Models.HelloPhraseRequest", null)
                        .WithMany("Responses")
                        .HasForeignKey("HelloPhraseRequestId");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.AnecdoteRequest", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.ByePhraseRequest", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("NinthThemeSolution.Models.HelloPhraseRequest", b =>
                {
                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
